apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: 'jacoco'
apply plugin: "org.sonarqube"

jacoco {
    toolVersion = "0.8.7"
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.outsystems.plugins.healthfitness"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        testOptions {
            unitTests.returnDefaultValues = true
                android.testOptions.unitTests.all {
                    jacoco {
                        includeNoLocationClasses = true
                        excludes = ['jdk.internal.*']
                    }
            }
        }

    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    task createTestReport(type: JacocoReport) {
    	group = "Reporting"

   	reports {
       		 xml.enabled = true
       		 html.enabled = true
    	}

   	    def fileFilter = ['**/R.class',
      	                  '**/R$*.class',
                          '**/BuildConfig.*',
                          '**/*$ViewInjector*.*',
                          '**/*$ViewBinder*.*',
                          '**/*$MembersInjector*.*',
                          '**/Manifest*.*',
                          '**/*Test*.*',
                          'android/**/*.*']
	    def debugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debugUnitTest", excludes: fileFilter)
    	def mainSrc = "${project.projectDir}/../../../../src/android"

    	sourceDirectories.from = files([mainSrc])
        additionalSourceDirs.from = files([mainSrc])
    	classDirectories.from = files([debugTree])
    	executionData.from = files("${project.buildDir}/jacoco/testDebugUnitTest.exec")
	}

    sonarqube {
        properties {
            property "sonar.host.url", "https://sonarcloud.io"
            property "sonar.organization", "outsystemsrd"
            property "sonar.projectKey", "OutSystems_cordova-outsystems-healthfitness"
            property "sonar.projectName", "OutSystems_cordova-outsystems-healthfitness"
            property "sonar.projectBaseDir", "$project.rootDir/../../../"
            property "sonar.tests", "$project.rootDir/app/src"
            property "sonar.sourceEncoding", "UTF-8"
            property "sonar.sources", "$project.rootDir/../../../src/android"
            property "sonar.exclusions", 
                    'build/**' +
                    '*.json,' +
                    '**/.gradle/**,' +
                    '**/R.class'
            property "sonar.java.coveragePlugin", "jacoco"
            property "sonar.coverage.jacoco.xmlReportPaths", "$project.rootDir/app/build/reports/jacoco/createTestReport/createTestReport.xml"
        }
    }

}
dependencies {


    implementation("androidx.appcompat:appcompat:1.3.1")
    implementation("androidx.test:core-ktx:1.4.0")
    implementation("com.github.OutSystems.os-plugins-base-interface:oscore-android:core-0.0.3@aar")
    implementation("com.github.OutSystems.os-plugins-base-interface:oshealthfitness-android:hf-0.0.25@aar")
    implementation("com.google.android.gms:play-services-fitness:20.0.0")
    implementation("com.google.android.gms:play-services-auth:19.2.0")
    implementation("com.google.code.gson:gson:2.8.8")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.5.2")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2")

    testImplementation("org.jetbrains.kotlin:kotlin-test")
    testImplementation("androidx.test.ext:junit-ktx:1.1.3")
    testImplementation("com.github.OutSystems.os-plugins-base-interface:oscore-android:core-0.0.3@aar")

    testImplementation("com.github.OutSystems.os-plugins-base-interface:oshealthfitness-android:hf-0.0.25@aar")

    //Use this for test development when the library also needs changing
    testImplementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])

    androidTestImplementation("androidx.test.ext:junit:1.1.3")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.4.0")

}